openapi: 3.0.3
info:
  title: СОА Лабораторная №1
  description: Документация для набора веб-сервисов в рамках лабораторной №1
  version: 0.0.1
paths:
  /movies:
    post:
      tags: [Базовые операции веб-сервиса №1]
      summary: Создать объект 
      description: |
        **Требования для объекта Movie**
  
        - name: Поле не может быть null, Строка не может быть пустой
        - coordinates: Поле не может быть null ( x - integer, y - float)
        - oscarsCount: Значение поля должно быть больше 0, Поле может быть null
        - genre: Поле может быть null
        - mpaaRating: Поле может быть null
        - directorName: Поле не может быть null
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
              
      responses:
        200:
          description: Объект успешно добавлен
          content:
            text/html:
              schema:
                type: string
                example: ok
        400:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": [
                      {
                        "field": "name",
                        "inner_message": "Это поле обязательно для заполнения"},
                      {
                        "field": "oscarsCount",
                        "inner_message": "Это поле должно быть больше 0, поле может быть null"
                      }
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 429,
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
  /movies/{id}:
    get:
      tags: [Базовые операции веб-сервиса №1]
      summary: Получить объект по id
      description: |
        **Введите id фильма**
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: id
            example: 1
      responses:
        200:
          description: Информация об объекте получена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieObjectResponse"
        400:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": [
                      {
                        "inner_message": "ID введен неверно"}
                      ]
                    }
        404:
          description: Объект не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": [
                      {
                        "inner_message": "Такого ID не существует"}
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 429,
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
    delete:
      tags: [Базовые операции веб-сервиса №1]
      summary: Удалить объект по id
      description: |
        **Введите id фильма**
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: id
            example: 1
      responses:
        200:
          description: Объект успешно удалён
          content:
            text/html:
              schema:
                type: string
                example: ok
        400:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": [
                      {
                        "inner_message": "ID введен неверно"}
                      ]
                    }
        404:
          description: Объект не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": [
                      {
                        "inner_message": "Такого ID не существует"}
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 429,
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
    patch:
      tags: [Базовые операции веб-сервиса №1]
      summary: Обновить объект по id
      description: |
        **Введите id фильма**
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: id
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
      responses:
        200:
          description: Объект успешно удалён
          content:
            text/html:
              schema:
                type: string
                example: ok
  /movies/{id}/mpaaRating:
      get:
        tags: [Базовые операции веб-сервиса №1]
        summary: Получить mpaaRating по id
        description: |
          **Введите id фильма**
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
              format: id
              example: 1
        responses:
          200:
            description: Информация об объекте получена
            content:
              application/json:
                schema:
                  type: string
                  example: PG-13
          400:
            description: Объект не соответсвует требованиям. Данные введены не верно
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
                examples:
                  response:
                    value: |-
                      {
                        "code": 400,
                        "message": [
                        {
                          "inner_message": "ID введен неверно"}
                        ]
                      }
          404:
            description: Объект не найден
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
                examples:
                  response:
                    value: |-
                      {
                        "code": 404,
                        "message": [
                        {
                          "inner_message": "Такого ID не существует"}
                        ]
                      }
          429:
            description: Слишком много запросов
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
                examples:
                  response:
                    value: |-
                      {
                        "code": 429,
                        "message": [
                        {
                          "inner_message": "Вы превысили лимит запросов"}
                        ]
                      }              
  /movies/search:
    get:
      tags: [Базовые операции веб-сервиса №1]
      summary: Получить страницу Фильмов с использвоанием фильтров и сортировки
      description: |
        **Требования для списка**
  
        - name: Поле не может быть null, поле должно быть больше 0
        - limit: Поле не может быть null, поле должно быть больше 0
      parameters:
        - name: page
          description: Номер страницы
          in: query
          required: false
          schema:
            type: integer
            example: 1
            nullable: false
        - name: limit
          description: Количество объектов на странице
          in: query
          required: false
          schema:
            type: integer
            example: 10
            nullable: false
        - name: sortById
          description: Сортировка по id
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
            example: "asc"
        - name: sortByName
          description: Сортировка по названию
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
            example: "asc"
        - name: sortByDate
          description: Сортировка по дате
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
            example: "asc"
        - name: oscarCount
          in: query
          required: false
          description: Фильтр по количеству Оскаров (например, больше или равно 1)
          schema:
            type: integer
            format: int32
            example: 1  # Значение, с которым будет сравниваться количество Оскаров (например, больше 1)
        - name: genre
          in: query
          required: false
          description: Фильтр по жанру
          schema:
            type: string
            enum:
                - ACTION
                - ADVENTURE
                - SCIENCE_FICTION
            example: "ACTION"
        - name: mpaaRating
          in: query
          required: false
          description: Фильтр по рейтингу(выводит все что меньше или равно заданного значения)
          schema:
            type: string
            enum: [PG_13, R, NC_17]
            example: "PG_13"
        - name: director
          in: query
          required: false
          description: Фильтр по имени режиссера
          schema:
            type: string
            example: "Sergei Balabanov"
      responses:
        200:
          description: Информация об объекте получена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieSortedFiteredRespones"
        400:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": [
                      {
                        "field": "id",
                        "inner_message": "Это поле принимает только целочисленные знаечния"},
                      {
                        "field": "oscarsCount",
                        "inner_message": "Это поле должно быть больше 0, поле может быть null"
                      }
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 429,
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
      
        
  /movies/search/count:
    get:
      tags: [Дополнительные операции веб-сервиса №1]
      summary: Вернуть количество объектов, значение поля mpaaRating которых меньше заданного.
      description: |
        **Выберите значение**
      parameters:
        - name: mpaaRating
          in: query
          required: true
          description: Значение MPAA рейтинга для фильтрации (например, "PG_13")
          schema:
            type: string
            enum: [PG_13, R, NC_17]
            example: "R"
      responses:
        200:
          description: Успешный ответ с количеством фильмов
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 5 
        400:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": [
                      {
                        "field": "mpaaRating",
                        "inner_message": "Вы должны выбрать значение из списка"
                      }
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 429,
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
  /movies/search/name:
    get:
      tags: [Дополнительные операции веб-сервиса №1]
        
      summary: Вернуть массив объектов, значение поля name которых содержит заданную подстроку.
      description: |
          **Требования**
        
          - name: поле не может быть пустым‚ поле не может быть null
      parameters:
        - description: Подстрока Name
          in: query
          name: name
          required: true
          schema:
            type: string
          example: "un"
      responses:
        200:
          description: Список фильмов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieSortedFiteredRespones"
        400:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": [
                      {
                        "inner_message": "Ошибка валидации."
                      }
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 429,
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }

  /movies/search/director:
    get:
      tags: [Дополнительные операции веб-сервиса №1]
        
      summary: Вернуть массив объектов, значение поля director которых меньше заданного.
      description: |
          **Требования**
          **Поле выведет всех кто идет после по алфавиту 
          - director: поле не может быть пустым‚ поле не может быть null
      parameters:
        - description: Введите имя режиссера
          in: query
          name: name
          required: true
          schema:
            type: string
          example: "George Lucas"
      responses:
        200:
          description: Список фильмов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieSortedFiteredRespones"
        400:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": [
                      {
                        "inner_message": "Ошибка валидации."
                      }
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 429,
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }





      
components:
  schemas:
  
    Movie:
      type: object
      required: 
        - name
        - coordinates  
        - directorID
      properties:
        name: 
          type: string
          example: Dune
          nullable: false
        coordinates:
          $ref: "#/components/schemas/Coordinates"
        oscarCount:
          type: integer
          example: 1
          nullable: true
        genre:
          $ref: "#/components/schemas/MovieGenre"
        mpaaRating:
          $ref: "#/components/schemas/MpaaRating"
        directorName:
          type: string
          example: Sergei Balabanov
          nullable: false
          
          
    Coordinates:
      type: object
      required:
        - y
      properties:
        x:
          type: integer
          example: 100
          nullable: true
        y:
          type: number
          format: float
          example: -100.1
          nullable: false
          
    Person:
      type: object
      required:
        - name
        - weight
        - passportID
      properties:
        name:
          type: string
          example: Sergei Balabanov
          nullable: false
        height:
          type: number
          format: double
          example: 180.0
          nullable: true
        weight:
          type: number
          format: double
          example: 100.0
          nullable: false
        passportID:
          type: string
          example: 2024 123456
          nullable: true
        location:
          $ref: "#/components/schemas/Location"
          
    
    Location:
      type: object
      required:
        - y
      properties:
        x:
          type: number
          format: float
          example: 100.1
          nullable: true
        y: 
          type: number
          format: float
          example: 100.1
        name:
          type: string
          example: ITMO University
          nullable: true
    
    MovieGenre:
      type: string
      enum:
        - ACTION
        - ADVENTURE
        - SCIENCE_FICTION
    
    MpaaRating:
      type: string
      enum: 
        - PG_13
        - R
        - NC_17
    
    MovieObjectResponse:
      type: object
      required:
        - id
        - name
        - coordinates
        - creationDate
        - oscarCount
        - genre
        - mpaaRating
        - director
      properties:
        id: 
          type: integer
          format: int64
          example: 1
          nullable: false
        name: 
          type: string
          example: Dune
          nullable: false
        coordinates:
          $ref: "#/components/schemas/Coordinates"
        creationDate:
          type: string
          nullable: false
          format: date-time
        oscarCount:
          type: integer
          example: 1
          nullable: true
        genre:
          $ref: "#/components/schemas/MovieGenre"
        mpaaRating:
          $ref: "#/components/schemas/MpaaRating"
        director:
          $ref: "#/components/schemas/Person"
    
    
    MovieSortedFiteredRespones:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/MovieObjectResponse"
      
      
      
    
    
    
    Error:
      required:
        - code
        - message
      properties:
        code:
          nullable: false
          type: integer
        message:
          nullable: false
          type: array
          items:
            type: object
            required:
            - inner_message
            properties:
              field:
                type: string
              inner_message:
                type: string

          
    
          
      
          
      
        
          
        
    
      
          
